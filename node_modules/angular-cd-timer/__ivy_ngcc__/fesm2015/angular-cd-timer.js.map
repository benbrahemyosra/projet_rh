{"version":3,"file":"angular-cd-timer.js","sources":["../../../projects/angular-cd-timer/src/lib/angular-cd-timer.component.ts","../../../projects/angular-cd-timer/src/lib/angular-cd-timer.module.ts","../../../projects/angular-cd-timer/src/public-api.ts","../../../projects/angular-cd-timer/src/angular-cd-timer.ts"],"names":[],"mappings":"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","sourcesContent":["\nimport {\n  AfterViewInit,\n  Component, ElementRef, EventEmitter, Input, OnDestroy, Output, Renderer2\n} from '@angular/core';\nimport {TimeInterface} from './angular-cd-timer.interface';\n\n@Component({\n  selector: 'cd-timer',\n  template: ' <ng-content></ng-content>'\n})\nexport class CdTimerComponent implements AfterViewInit, OnDestroy {\n  private timeoutId: any;\n  private tickCounter: number;\n  private ngContentSchema: string;\n\n  private seconds: number;\n  private minutes: number;\n  private hours: number;\n  private days: number;\n\n  @Input() startTime: number;\n  @Input() endTime: number;\n  @Input() countdown: boolean;\n  @Input() autoStart: boolean;\n  @Input() maxTimeUnit: string;\n  @Input() format: string;\n  @Output() onStart: EventEmitter<CdTimerComponent> = new EventEmitter<CdTimerComponent>();\n  @Output() onStop: EventEmitter<CdTimerComponent> = new EventEmitter<CdTimerComponent>();\n  @Output() onTick: EventEmitter<TimeInterface> = new EventEmitter<TimeInterface>();\n  @Output() onComplete: EventEmitter<CdTimerComponent> = new EventEmitter<CdTimerComponent>();\n\n  constructor(private elt: ElementRef, private renderer: Renderer2) {\n    // Initialization\n    this.autoStart  = true;\n    this.startTime  = 0;\n    this.endTime    = 0;\n    this.timeoutId  = null;\n    this.countdown  = false;\n    this.format     = 'default';\n  }\n\n  ngAfterViewInit() {\n    const ngContentNode = this.elt.nativeElement.lastChild;    // Get last child, defined by user or span\n    this.ngContentSchema = ngContentNode ? ngContentNode.nodeValue : '';\n    if (this.autoStart === undefined || this.autoStart === true) {\n      this.start();\n    }\n  }\n\n  ngOnDestroy() {\n    this.resetTimeout();\n  }\n\n  /**\n   * Start the timer\n   */\n  public start() {\n    this.initVar();\n    this.resetTimeout();\n    this.computeTimeUnits();\n    this.startTickCount();\n\n    this.onStart.emit(this);\n  }\n\n  /**\n   * Resume the timer\n   */\n  public resume() {\n    this.resetTimeout();\n\n    this.startTickCount();\n  }\n\n  /**\n   * Stop the timer\n   */\n  public stop() {\n    this.clear();\n\n    this.onStop.emit(this);\n  }\n\n  /**\n   * Reset the timer\n   */\n  public reset() {\n    this.initVar();\n    this.resetTimeout();\n    this.clear();\n    this.computeTimeUnits();\n    this.renderText();\n  }\n\n  /**\n   * Get the time information\n   * @returns TimeInterface\n   */\n  public get() {\n    return {\n      seconds: this.seconds,\n      minutes: this.minutes,\n      hours: this.hours,\n      days: this.days,\n      timer: this.timeoutId,\n      tick_count: this.tickCounter\n    };\n  }\n\n  /**\n   * Initialize variable before start\n   */\n  private initVar() {\n    this.startTime = this.startTime || 0;\n    this.endTime   = this.endTime || 0;\n    this.countdown = this.countdown || false;\n    this.tickCounter = this.startTime;\n\n    // Disable countdown if start time not defined\n    if (this.countdown && this.startTime === 0) {\n      this.countdown = false;\n    }\n\n    // Determine auto format\n    if (!this.format) {\n      this.format = (this.ngContentSchema.length > 5) ? 'user' : 'default';\n    }\n  }\n\n  /**\n   * Reset timeout\n   */\n  private resetTimeout() {\n    if (this.timeoutId) {\n      clearInterval(this.timeoutId);\n    }\n  }\n\n  /**\n   * Render the time to DOM\n   */\n  private renderText() {\n    let outputText;\n    if (this.format === 'user') {\n      // User presentation\n      const items = {\n        'seconds': this.seconds,\n        'minutes': this.minutes,\n        'hours': this.hours,\n        'days': this.days\n      };\n\n      outputText = this.ngContentSchema;\n\n      for (const key of Object.keys(items)) {\n        outputText = outputText.replace('[' + key + ']', (items as any)[key].toString());\n      }\n    } else if (this.format === 'intelli') {\n      // Intelli presentation\n      outputText = '';\n      if (this.days > 0) {\n        outputText += this.days.toString() + 'day' + ((this.days > 1) ? 's' : '') + ' ';\n      }\n      if ((this.hours > 0) || (this.days > 0)) {\n        outputText += this.hours.toString() + 'h ';\n      }\n      if (((this.minutes > 0) || (this.hours > 0)) && (this.days === 0)) {\n        outputText += this.minutes.toString().padStart(2, '0') + 'min ';\n      }\n      if ((this.hours === 0) && (this.days === 0)) {\n        outputText += this.seconds.toString().padStart(2, '0') + 's';\n      }\n    } else if (this.format === 'hms') {\n      // Hms presentation\n      outputText = this.hours.toString().padStart(2, '0') + ':';\n      outputText += this.minutes.toString().padStart(2, '0') + ':';\n      outputText += this.seconds.toString().padStart(2, '0');\n    } else {\n      // Default presentation\n      outputText = this.days.toString() + 'd ';\n      outputText += this.hours.toString() + 'h ';\n      outputText += this.minutes.toString() + 'm ';\n      outputText += this.seconds.toString() + 's';\n    }\n\n    this.renderer.setProperty(this.elt.nativeElement, 'innerHTML', outputText);\n  }\n\n  private clear() {\n    this.resetTimeout();\n    this.timeoutId = null;\n  }\n\n  /**\n   * Compute each unit (seconds, minutes, hours, days) for further manipulation\n   * @protected\n   */\n  protected computeTimeUnits() {\n    if (!this.maxTimeUnit || this.maxTimeUnit === 'day') {\n      this.seconds  = Math.floor(this.tickCounter % 60);\n      this.minutes  = Math.floor((this.tickCounter / 60) % 60);\n      this.hours    = Math.floor((this.tickCounter / 3600) % 24);\n      this.days     = Math.floor((this.tickCounter / 3600) / 24);\n    } else if (this.maxTimeUnit === 'second') {\n      this.seconds  = this.tickCounter;\n      this.minutes  = 0;\n      this.hours    = 0;\n      this.days     = 0;\n    } else if (this.maxTimeUnit === 'minute') {\n      this.seconds  = Math.floor(this.tickCounter % 60);\n      this.minutes  = Math.floor(this.tickCounter / 60);\n      this.hours    = 0;\n      this.days     = 0;\n    } else if (this.maxTimeUnit === 'hour') {\n      this.seconds  = Math.floor(this.tickCounter % 60);\n      this.minutes  = Math.floor((this.tickCounter / 60) % 60);\n      this.hours    = Math.floor(this.tickCounter / 3600);\n      this.days     = 0;\n    }\n\n    this.renderText();\n  }\n\n  /**\n   * Start tick count, base of this component\n   * @protected\n   */\n  protected startTickCount () {\n    const that = this;\n\n    that.timeoutId = setInterval(function() {\n      let counter;\n\n      if (that.countdown) {\n        // Compute finish counter for countdown\n        counter = that.tickCounter;\n\n        if (that.startTime > that.endTime) {\n          counter = that.tickCounter - that.endTime - 1;\n        }\n      } else {\n        // Compute finish counter for timer\n        counter = that.tickCounter - that.startTime;\n\n        if (that.endTime > that.startTime) {\n          counter = that.endTime - that.tickCounter - 1;\n        }\n      }\n\n      that.computeTimeUnits();\n\n      const timer: TimeInterface = {\n        seconds: that.seconds,\n        minutes: that.minutes,\n        hours: that.hours,\n        days: that.days,\n        timer: that.timeoutId,\n        tick_count: that.tickCounter\n      };\n\n      that.onTick.emit(timer);\n\n      if (counter < 0) {\n        that.stop();\n\n        that.onComplete.emit(that);\n        return;\n      }\n\n      if (that.countdown) {\n        that.tickCounter--;\n      } else {\n        that.tickCounter++;\n      }\n    }, 1000); // Each seconds\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CdTimerComponent } from './angular-cd-timer.component';\n\n\n\n@NgModule({\n  declarations: [CdTimerComponent],\n  imports: [\n  ],\n  exports: [CdTimerComponent]\n})\nexport class CdTimerModule { }\n","/*\n * Public API Surface of angular-cd-timer\n */\n\nexport * from './lib/angular-cd-timer.component';\nexport * from './lib/angular-cd-timer.interface';\nexport * from './lib/angular-cd-timer.module';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"]}